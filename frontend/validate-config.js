// Script de validaci√≥n de configuraci√≥n
// Ejecutar con: node validate-config.js

require('dotenv').config();

console.log('üîç Validando configuraci√≥n del sistema...\n');

// Verificar variables de entorno cr√≠ticas
const requiredEnvVars = [
    'DB_HOST',
    'DB_PORT', 
    'DB_NAME',
    'DB_USER',
    'DB_PASSWORD',
    'BACKEND_URL',
    'SESSION_SECRET'
];

let allGood = true;

console.log('üìã Verificando variables de entorno:');
requiredEnvVars.forEach(varName => {
    const value = process.env[varName];
    if (value) {
        if (varName === 'DB_PASSWORD' || varName === 'SESSION_SECRET') {
            console.log(`‚úÖ ${varName}: ****** (oculto por seguridad)`);
        } else {
            console.log(`‚úÖ ${varName}: ${value}`);
        }
    } else {
        console.log(`‚ùå ${varName}: NO CONFIGURADO`);
        allGood = false;
    }
});

console.log('\nüîê Verificando seguridad:');

// Verificar que la contrase√±a no est√© en valores por defecto peligrosos
const password = process.env.DB_PASSWORD;
if (password) {
    if (password.length < 8) {
        console.log('‚ö†Ô∏è  Advertencia: La contrase√±a de BD es muy corta (recomendado: 8+ caracteres)');
    } else {
        console.log('‚úÖ Contrase√±a de BD: Longitud adecuada');
    }
} else {
    console.log('‚ùå Contrase√±a de BD: NO CONFIGURADA');
    allGood = false;
}

// Verificar SESSION_SECRET
const sessionSecret = process.env.SESSION_SECRET;
if (sessionSecret) {
    if (sessionSecret.length < 32) {
        console.log('‚ö†Ô∏è  Advertencia: SESSION_SECRET es muy corto (recomendado: 32+ caracteres)');
    } else {
        console.log('‚úÖ SESSION_SECRET: Longitud adecuada');
    }
} else {
    console.log('‚ùå SESSION_SECRET: NO CONFIGURADO');
    allGood = false;
}

// Verificar conexi√≥n a base de datos
console.log('\nüóÑÔ∏è  Verificando conexi√≥n a PostgreSQL:');
const { testConnection } = require('./config/database');

testConnection()
    .then(connected => {
        if (connected) {
            console.log('‚úÖ Conexi√≥n a PostgreSQL: EXITOSA');
        } else {
            console.log('‚ùå Conexi√≥n a PostgreSQL: FALLIDA');
            allGood = false;
        }
        
        console.log('\nüìä Resumen de validaci√≥n:');
        if (allGood) {
            console.log('üéâ ¬°Todas las configuraciones est√°n correctas!');
            console.log('‚úÖ El sistema est√° listo para usar');
        } else {
            console.log('‚ùå Hay problemas de configuraci√≥n que deben resolverse');
            console.log('üí° Revisa las variables de entorno en el archivo .env');
        }
    })
    .catch(error => {
        console.log('‚ùå Error al verificar conexi√≥n:', error.message);
        console.log('\nüìä Resumen de validaci√≥n:');
        console.log('‚ùå Hay problemas de configuraci√≥n que deben resolverse');
        console.log('üí° Revisa las variables de entorno en el archivo .env');
    });
